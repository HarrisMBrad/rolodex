{"version":3,"sources":["components/scroll/scroll.component.jsx","components/search-box/searchbox.component.jsx","components/card/card.component.jsx","components/card-list/cardlist.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","border","height","children","SearchBox","placeholder","handleChange","className","type","onChange","Card","alt","src","monster","id","name","email","CardList","monsters","map","App","state","searchField","console","log","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8SAWeA,EARA,SAACC,GACV,OACM,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACOJ,EAAMK,YCMVC,G,MATU,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,MCLLI,G,MAAO,SAAAZ,GAAK,OACrB,sBAAKS,UAAU,iBAAf,UACI,qBAAKI,IAAI,UAAUC,IAAG,+BAA0Bd,EAAMe,QAAQC,GAAxC,4BACrB,mCAAMhB,EAAMe,QAAQE,QACpB,kCAAKjB,EAAMe,QAAQG,MAAnB,YCKMC,G,MARS,SAAAnB,GACpB,OAAO,qBAAKS,UAAU,WAAf,SACFT,EAAMoB,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCmDbM,G,wDAjDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXH,SAAU,GACVI,YAAa,IAGfC,QAAQC,IAAI,eARA,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OACZA,EAASC,UACVF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEZ,SAAUW,OAE3CN,QAAQC,IAAI,uB,oBAMd,WAAU,IAAD,SAE2BO,KAAKV,MAA/BH,EAFD,EAECA,SAAUI,EAFX,EAEWA,YACZU,EAAmBd,EAASe,QAAO,SAAApB,GAAO,OAC9CA,EAAQE,KAAKmB,cAAcC,SAASb,EAAYc,wBAIlD,OADAb,QAAQC,IAAI,UAEV,sBAAKjB,UAAU,MAAf,UACE,oDAEA,cAAC,EAAD,CACEF,YAAY,kBACZC,aAAc,SAAA+B,GAAC,OACb,EAAKP,SAAS,CAAER,YAAae,EAAEC,OAAOC,WAC1C,cAAC,EAAD,UACE,cAAC,EAAD,CAAUrB,SAAUc,a,GAzCZQ,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEL,cAAC,EAAD,IAASC,SAASC,eAAe,SAKrCX,M","file":"static/js/main.6712cf7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './scroll.styles.css';\r\n\r\nconst Scroll = (props) => {\r\n      return (\r\n            <div style={{ overflowY: 'scroll', border: '3px solid black', height: '800px' }}>\r\n                  {props.children}\r\n            </div>\r\n      );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './searchbox.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n\r\n);\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n         <h2> {props.monster.name}</h2>\r\n         <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './cardlist.styles.css';\r\n\r\nexport const CardList = props => {\r\n    return <div className='cardlist'>\r\n        {props.monsters.map(monster =>(\r\n         <Card key={monster.id} monster={monster}></Card>\r\n       ))}\r\n    </div>;\r\n};\r\n\r\nexport default CardList;","import React, { Component } from 'react';\nimport Scroll from './components/scroll/scroll.component';\nimport SearchBox from './components/search-box/searchbox.component';\nimport CardList from './components/card-list/cardlist.component';\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    //order of execution...\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response =>\n        response.json())\n      .then(users => this.setState({ monsters: users }));\n    // when the state updated from what was fetched...\n    console.log('componentDidMount');\n  }\n\n\n  /**Remmember, this render method is already provided \n   * we just come above it to make the function component */\n  render() {\n    // Destructuring the state...\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    // for deveopment...\n    console.log('render');\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={e =>\n            this.setState({ searchField: e.target.value })} />\n        <Scroll>\n          <CardList monsters={filteredMonsters} />\n        </Scroll>\n\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}